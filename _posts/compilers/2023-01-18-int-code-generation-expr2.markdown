---
layout: post
title: "中间代码生成——表达式与控制流②"
---


## 回填技术

上文的SDD在实现上仍有几个问题。
首先，这个SDD生成了过多的标号，甚至对同一语句可能有多个标号；
其次，这个SDD只能确定跳转到的标号，而不能确定跳转到的地址。
考虑最简单的`S ::= if (B) S1`语句，如果一边扫描一边生成，那么我们必须在生成`B`的代码时确定`B.false`是什么。
原则上，我们通过继承属性`S.next`可以得知应该跳转至的标号，从而生成正确的代码。
但是此时`S`尚未完全生成，因此我们不可能确定跳转至的地址。
